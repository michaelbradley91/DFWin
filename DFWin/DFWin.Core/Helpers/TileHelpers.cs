using System.Collections.Generic;

namespace DFWin.Core.Helpers
{
    public static class TileHelpers
    {
        public static readonly IReadOnlyList<char> CharacterMap;

        static TileHelpers()
        {
            var characterMap = new char[256];
            for (var i = 0; i < characterMap.Length; i++) characterMap[i] = ' ';
            characterMap[24] = '↑';
            characterMap[25] = '↓';
            characterMap[26] = '→';
            characterMap[27] = '←';
            characterMap[32] = ' ';
            characterMap[33] = '!';
            characterMap[34] = '"';
            characterMap[35] = '#';
            characterMap[36] = '$';
            characterMap[37] = '%';
            characterMap[38] = '&';
            characterMap[39] = '\'';
            characterMap[40] = '(';
            characterMap[41] = ')';
            characterMap[42] = '*';
            characterMap[43] = '+';
            characterMap[44] = ',';
            characterMap[45] = '-';
            characterMap[46] = '.';
            characterMap[47] = '/';
            characterMap[48] = '0';
            characterMap[49] = '1';
            characterMap[50] = '2';
            characterMap[51] = '3';
            characterMap[52] = '4';
            characterMap[53] = '5';
            characterMap[54] = '6';
            characterMap[55] = '7';
            characterMap[56] = '8';
            characterMap[57] = '9';
            characterMap[58] = ':';
            characterMap[59] = ';';
            characterMap[60] = '<';
            characterMap[61] = '=';
            characterMap[62] = '>';
            characterMap[63] = '?';
            characterMap[64] = '@';
            characterMap[65] = 'A';
            characterMap[66] = 'B';
            characterMap[67] = 'C';
            characterMap[68] = 'D';
            characterMap[69] = 'E';
            characterMap[70] = 'F';
            characterMap[71] = 'G';
            characterMap[72] = 'H';
            characterMap[73] = 'I';
            characterMap[74] = 'J';
            characterMap[75] = 'K';
            characterMap[76] = 'L';
            characterMap[77] = 'M';
            characterMap[78] = 'N';
            characterMap[79] = 'O';
            characterMap[80] = 'P';
            characterMap[81] = 'Q';
            characterMap[82] = 'R';
            characterMap[83] = 'S';
            characterMap[84] = 'T';
            characterMap[85] = 'U';
            characterMap[86] = 'V';
            characterMap[87] = 'W';
            characterMap[88] = 'X';
            characterMap[89] = 'Y';
            characterMap[90] = 'Z';
            characterMap[91] = '[';
            characterMap[92] = '\\';
            characterMap[93] = ']';
            characterMap[94] = '^';
            characterMap[95] = '_';
            characterMap[96] = '`';
            characterMap[97] = 'a';
            characterMap[98] = 'b';
            characterMap[99] = 'c';
            characterMap[100] = 'd';
            characterMap[101] = 'e';
            characterMap[102] = 'f';
            characterMap[103] = 'g';
            characterMap[104] = 'h';
            characterMap[105] = 'i';
            characterMap[106] = 'j';
            characterMap[107] = 'k';
            characterMap[108] = 'l';
            characterMap[109] = 'm';
            characterMap[110] = 'n';
            characterMap[111] = 'o';
            characterMap[112] = 'p';
            characterMap[113] = 'q';
            characterMap[114] = 'r';
            characterMap[115] = 's';
            characterMap[116] = 't';
            characterMap[117] = 'u';
            characterMap[118] = 'v';
            characterMap[119] = 'w';
            characterMap[120] = 'x';
            characterMap[121] = 'y';
            characterMap[122] = 'z';
            characterMap[123] = '{';
            characterMap[124] = '|';
            characterMap[125] = '}';
            characterMap[126] = '~';
            characterMap[128] = 'Ç';
            characterMap[129] = 'ü';
            characterMap[130] = 'é';
            characterMap[131] = 'â';
            characterMap[132] = 'ä';
            characterMap[133] = 'à';
            characterMap[134] = 'å';
            characterMap[135] = 'ç';
            characterMap[136] = 'ê';
            characterMap[137] = 'ë';
            characterMap[138] = 'è';
            characterMap[139] = 'ï';
            characterMap[140] = 'î';
            characterMap[141] = 'ì';
            characterMap[142] = 'Ä';
            characterMap[143] = 'Å';
            characterMap[144] = 'É';
            characterMap[145] = 'æ';
            characterMap[146] = 'Æ';
            characterMap[147] = 'ô';
            characterMap[148] = 'ö';
            characterMap[149] = 'ò';
            characterMap[150] = 'û';
            characterMap[151] = 'ù';
            characterMap[152] = 'ÿ';
            characterMap[153] = 'Ö';
            characterMap[154] = 'Ü';
            characterMap[155] = '¢';
            characterMap[156] = '£';
            characterMap[157] = '¥';
            characterMap[159] = 'ƒ';
            characterMap[160] = 'á';
            characterMap[161] = 'í';
            characterMap[162] = 'ó';
            characterMap[163] = 'ú';
            characterMap[164] = 'ñ';
            characterMap[165] = 'Ñ';
            characterMap[166] = 'ª';
            characterMap[167] = 'º';
            characterMap[168] = '¿';
            characterMap[169] = '⌐';
            characterMap[170] = '¬';
            characterMap[171] = '½';
            characterMap[172] = '¼';
            characterMap[173] = '¡';
            characterMap[174] = '«';
            characterMap[175] = '»';
            characterMap[241] = '±';
            characterMap[242] = '≥';
            characterMap[243] = '≤';
            characterMap[246] = '÷';
            characterMap[248] = '°';
            characterMap[251] = '√';
            characterMap[252] = 'ⁿ';
            CharacterMap = characterMap;
        }
    }
}
